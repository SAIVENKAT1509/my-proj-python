def prime_factors(n):
 factors = []
 # Check for number of 2s that divide n
 while n % 2 == 0:
 factors.append(2)
 n //= 2
 # n must be odd at this point, so check for odd factors
 for i in range(3, int(n**0.5) + 1, 2):
 while n % i == 0:
 factors.append(i)
 n //= i
 # This condition is to check if n is a prime number greater than 2
 if n > 2:
 factors.append(n)
 return factors
def calculate_weighted_sum(arr, num):
 if not arr: # Check if the array is empty
 return -1
 
 factors = prime_factors(num)
 total_sum = 0
 found = False
 for factor in factors:
 if factor < len(arr): # Ensure that the index is valid
 total_sum += arr[factor]
 found = True
 return total_sum if found else 0
# Main program to read input and execute the function
if _name== "main_":
 import sys
 
 n = int(sys.stdin.readline().strip()) # Read the size of the array
 arr = list(map(int, sys.stdin.readline().strip().split())) # Read the array
 num = int(sys.stdin.readline().strip()) # Read the integer num
 
 result = calculate_weighted_sum(arr, num)
Â print(result)
